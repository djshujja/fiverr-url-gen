{"version":3,"sources":["utils/serverUrls.js","Components/AllUrls.jsx","Components/NewUrl.jsx","Components/Urls.jsx","Components/Pixels.jsx","App.js","reportWebVitals.js","index.js"],"names":["serverHost","AllUrls","useState","urls","setUrls","useEffect","loadingUrls","axios","get","then","res","console","log","data","class","map","url","full","href","short","clicks","to","_id","NewUrl","source","setSource","trackingUrl","setTrackingUrl","sub","setSub","tracker","setTracker","pixels","setPixels","pixelUrl","setPixelUrl","sourceId","handleSubmit","event","a","preventDefault","postTracker","post","text","onSubmit","htmlFor","name","type","value","onChange","e","target","required","Urls","Pixels","props","location","pathname","search","App","className","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1696284.chunk.js","sourcesContent":["// export const serverHost = \"http://localhost:5000\"\r\nexport const serverHost = \"https://affiliatetracker.herokuapp.com\"\r\n","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {serverHost} from '../utils/serverUrls'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AllUrls = () => {\r\n\r\n    const [ urls, setUrls ] = useState([])\r\n    \r\n    useEffect(() => {\r\n        loadingUrls()\r\n\r\n    }, [])\r\n\r\n    const loadingUrls = () => {\r\n        axios.get(serverHost + '/all').then(res => {\r\n            console.log(res.data)\r\n            setUrls(res.data)\r\n            console.log(urls)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n        <h2>Affiliate Tracking Software</h2>\r\n           \r\n            <table class=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Full Url</th>\r\n                    <th>Affiliate Link</th>\r\n                    <th>Clicks</th>\r\n                    <th>Get Pixels</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    urls.map(url => (\r\n                        <tr key={url._id}>\r\n                            <td>{url.full}</td>\r\n                            <td><a href={serverHost+ `/${ url.short}`}>{serverHost+ `/${ url.short}`}</a></td>\r\n                            <td>{url.clicks}</td>\r\n                            <td><Link to={`/${ url.short}`}>Get Pixels</Link></td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUrls\r\n","import React,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {serverHost} from '../utils/serverUrls'\r\n\r\nconst NewUrl = () => {\r\n\r\n    const [source, setSource] = useState('')\r\n    const [trackingUrl, setTrackingUrl] = useState('')\r\n    const [sub, setSub] = useState('')\r\n    const [tracker, setTracker] = useState({})\r\n    const [pixels, setPixels] = useState(false)\r\n    const [pixelUrl, setPixelUrl] = useState('')\r\n    const [short, setShort] = useState('')\r\n\r\n    useEffect(() => {\r\n        setTracker({\r\n            sourceId:source,\r\n            full: trackingUrl,\r\n            sub\r\n        })        \r\n    }, [source,trackingUrl,sub]\r\n    )\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n        postTracker(tracker)\r\n    }\r\n\r\n    const postTracker = data => {\r\n        console.log(data)\r\n        axios.post(`${serverHost}/shortUrls`, data).then(res => {\r\n            setPixels(true)\r\n            setPixelUrl(res.data.short)\r\n        })\r\n    }\r\n\r\n    const text = `<img src='${serverHost}/${pixelUrl}' width='1px' height='1px' />`;\r\n\r\n    return (\r\n      \r\n      <div>\r\n           <form onSubmit={handleSubmit}>\r\n               <br/>\r\n                <label htmlFor=\"source\">Tracking URL</label>\r\n                <input name=\"source\" type=\"text\" value={trackingUrl} onChange={e => setTrackingUrl(e.target.value)} required  />\r\n                <br/>\r\n                <label htmlFor=\"source\">Enter Source</label>\r\n                <input name=\"source\" type=\"text\" value={source} onChange={e => setSource(e.target.value)} required  />\r\n                <br/>\r\n                <label htmlFor=\"Sub\">Enter Sub</label>\r\n                <input name=\"sub\" type=\"text\" value={sub} onChange={e => setSub(e.target.value)} required  />\r\n                <br/>\r\n                <button type=\"submit\">Generate Url and Pixels</button>\r\n           </form>\r\n           {\r\n               pixels ? (\r\n                <div>\r\n                    <h2>HTML Pixels</h2>\r\n                    {text}\r\n                    <br/>\r\n                    <h2>Tracking Url</h2>\r\n                    {`${serverHost}/${pixelUrl}`}\r\n                </div>\r\n               ) : null\r\n           }\r\n       </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default NewUrl\r\n","import React from 'react'\r\nimport AllUrls from './AllUrls'\r\nimport NewUrl from './NewUrl'\r\n\r\nfunction Urls() {\r\n    return (\r\n        <div>\r\n        <AllUrls/>\r\n        <NewUrl/>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Urls\r\n","import React from 'react'\r\nimport {serverHost} from '../utils/serverUrls'\r\n\r\nconst Pixels = props => {\r\n\r\n\r\n    \r\n    const pixelUrl = props.location.pathname + props.location.search\r\n\r\n    const text = `<img src='${serverHost}${pixelUrl}' width='1px' height='1px' />`;\r\n    return (\r\n        <div>\r\n    \r\n            <div>\r\n                    <h2>HTML Pixels</h2>\r\n                    {text}\r\n                    <br/>\r\n                    <h2>Tracking Url</h2>\r\n                    {`${serverHost}${pixelUrl}`}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pixels\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport Urls from './Components/Urls';\nimport NewUrl from './Components/NewUrl';\nimport Pixels from './Components/Pixels';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Urls} />\n          <Route path=\"/generate\" exact component={NewUrl} />\n          <Route path=\"/:id\" component={Pixels} />\n          \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}